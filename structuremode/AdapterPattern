定义：适配器模式：将一个类的接口转换成客户希望的另一个接口。适配器模式让那些接口不兼容的类可以一起工作

角色：
Source：需要被适配的类、接口、对象，即Datas。 
Destination：需要得到的类，Source通过适配得到的类对象，也就是我们期待得到的借口。 
Adapter：适配器类，协调Source和Destination，使两者能够协同工作。

适用场景：
1，系统需要使用现有的类，但现有的类却不兼容。 
2，需要建立一个可以重复使用的类，用于一些彼此关系不大的类，并易于扩展，以便于面对将来会出现的类。 
3，需要一个统一的输出接口，但是输入类型却不可预知。



// Source类
public class AC220 {
    public int output220V(){
        int output = 220;
        return output;
    }
}


// Destination目标类
public interface DC5 {
    int output5V();
}

// Adapter类
public class PowerAdapter extends AC220 implements DC5 {
    @Override
    public int output5V() {
        int output = output220V();
        return (output / 44);
    }
}

// 测试类：
 private void initClassAdapter() {
        DC5 dc5 = new com.demo.adapter.classadapter.PowerAdapter();
        dc5.output5V();
    }



